name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        id: cache
        run: npm ci

  prettier:
    timeout-minutes: 10
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        if: needs.setup.outputs.cache-hit != 'true'
        run: npm ci

      - name: Add Prettier problem matcher
        run: echo "::add-matcher::.github/prettier-matcher.json"

      - name: Run Prettier check
        run: |
          npm run format -- --check --loglevel warn
          if [ $? -ne 0 ]; then
            echo "::error::Prettier found files that need formatting. Run 'npm run format' to fix them."
            exit 1
          fi

  eslint:
    timeout-minutes: 10
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        if: needs.setup.outputs.cache-hit != 'true'
        run: npm ci

      - name: Add ESLint problem matcher
        run: echo "::add-matcher::.github/eslint-matcher.json"

      - name: Run ESLint
        run: |
          npm run lint -- --format stylish
          if [ $? -ne 0 ]; then
            echo "::error::ESLint found issues that need to be fixed."
            exit 1
          fi

  test:
    timeout-minutes: 10
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        if: needs.setup.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run tests
        run: npm test -- --verbose
        env:
          CI: true
